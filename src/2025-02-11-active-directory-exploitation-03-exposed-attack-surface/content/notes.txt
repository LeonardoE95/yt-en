                    _______________________________

                     ACTIVE DIRECTORY EXPLOITATION
                         Exposed Attack Surface

                                Hexdump
                    _______________________________


Table of Contents
_________________

1. Introduction
2. AD Services
.. 1. DONE 53/tcp   - DNS
.. 2. DONE 80/tcp   - HTTP
.. 3. DONE 88/tcp   - Kerberos
.. 4. DONE 135/tcp  - Microsoft Windows RPC
.. 5. DONE 139/tcp  - NetBIOS
.. 6. DONE 389/tcp  - LDAP
.. 7. DONE 443/tcp  - HTTPs
.. 8. DONE 445/tcp  - SMB
.. 9. DONE 464/tcp  - kpasswd5
.. 10. DONE 593/tcp  - ncacn_http
.. 11. DONE 636/tcp  - LDAPS
.. 12. DONE 3268/tcp - GC over ldap
.. 13. DONE 3269/tcp - GC over SSL/TLS
.. 14. DONE 5357/tcp - Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
.. 15. DONE 5985/tcp - Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
3. General Services
.. 1. DONE 21/tcp   - FTP
.. 2. DONE 22/tcp   - SSH
.. 3. DONE 1433/tcp - MSSQL
.. 4. DONE 3389/tcp - RDP


1 Introduction
==============

  If we ran an nmap over the Domain Controller (IP) of our lab, we see
  the following exposed ports

  ,----
  | nmap -sC -sV -Pn 192.168.122.30
  `----

  ,----
  | Starting Nmap 7.95 ( https://nmap.org ) at 2025-01-31 18:15 CET
  | Nmap scan report for hexdump.lab (192.168.122.30)
  | Host is up (0.00051s latency).
  | Not shown: 986 filtered tcp ports (no-response)
  | PORT     STATE SERVICE       VERSION
  | 53/tcp   open  domain        Simple DNS Plus
  | 80/tcp   open  http          Microsoft IIS httpd 10.0
  | |_http-server-header: Microsoft-IIS/10.0
  | | http-methods: 
  | |_  Potentially risky methods: TRACE
  | |_http-title: IIS Windows Server
  | 88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2025-02-01 02:15:27Z)
  | 135/tcp  open  msrpc         Microsoft Windows RPC
  | 139/tcp  open  netbios-ssn   Microsoft Windows netbios-ssn
  | 389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: hexdump.lab0., Site: Default-First-Site-Name)
  | 445/tcp  open  microsoft-ds?
  | 464/tcp  open  kpasswd5?
  | 593/tcp  open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
  | 636/tcp  open  tcpwrapped
  | 3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: hexdump.lab0., Site: Default-First-Site-Name)
  | 3269/tcp open  tcpwrapped
  | 5357/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
  | |_http-title: Service Unavailable
  | |_http-server-header: Microsoft-HTTPAPI/2.0
  | 5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
  | |_http-title: Not Found
  | |_http-server-header: Microsoft-HTTPAPI/2.0
  | Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows
  | 
  | Host script results:
  | | smb2-time: 
  | |   date: 2025-02-01T02:15:33
  | |_  start_date: N/A
  | |_nbstat: NetBIOS name: DC01, NetBIOS user: <unknown>, NetBIOS MAC: 52:54:00:b7:e2:97 (QEMU virtual NIC)
  | | smb2-security-mode: 
  | |   3:1:1: 
  | |_    Message signing enabled and required
  | |_clock-skew: 8h59m58s
  | 
  | Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
  | Nmap done: 1 IP address (1 host up) scanned in 56.59 seconds
  `----


2 AD Services
=============

2.1 DONE 53/tcp   - DNS
~~~~~~~~~~~~~~~~~~~~~~~

  The DNS (`Domain Name System') protocol is responsible for translating
  human-readable domain names (dc01.hexdump.lab) into machine-readable
  IP addresses (192.168.122.30).

  This allows browsers and other applications to connect to websites and
  services on the internet using easy-to-remember names instead of
  numerical IP addresses.

  ,----
  | PS C:\Users\leo> nslookup -type=SRV dc01.hexdump.lab
  | Server:  DC01
  | Address:  192.168.122.30
  | 
  | hexdump.lab
  |         primary name server = dc01.hexdump.lab
  |         responsible mail addr = hostmaster.hexdump.lab
  |         serial  = 24
  |         refresh = 900 (15 mins)
  |         retry   = 600 (10 mins)
  |         expire  = 86400 (1 day)
  |         default TTL = 3600 (1 hour)
  `----

  In the context of Active Directory (AD), the DNS protocol plays a
  critical role in helping clients and servers locate resources within
  the AD domain. Without DNS, clients would have difficulty locating and
  interacting with AD resources.


2.2 DONE 80/tcp   - HTTP
~~~~~~~~~~~~~~~~~~~~~~~~

  Typical HTTP protocol that is used by web application. In the port 80
  this is exposed without cryptography, therefore it is vulnerable to
  MiTM attacks.

  ,----
  | [leo@arch ~]$ curl -v http://192.168.122.30 
  | #    Trying 192.168.122.30:80...
  | #  Connected to 192.168.122.30 (192.168.122.30) port 80
  | #  using HTTP/1.x
  | > GET / HTTP/1.1
  | > Host: 192.168.122.30
  | > User-Agent: curl/8.11.1
  | > Accept: */*
  | > 
  | #  Request completely sent off
  | < HTTP/1.1 200 OK
  | < Content-Type: text/html
  | < Last-Modified: Fri, 31 Jan 2025 04:32:12 GMT
  | < Accept-Ranges: bytes
  | < ETag: "823fc9189973db1:0"
  | < Server: Microsoft-IIS/10.0
  | < Date: Fri, 31 Jan 2025 04:36:24 GMT
  | < Content-Length: 703
  `----


2.3 DONE 88/tcp   - Kerberos
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  The Kerberos protocol is a network authentication protocol designed to
  provide secure authentication between users and services on a network.

  Clients and services communicate with a Key Distribution Center (KDC)
  on port 88, which consists of two components:

  - The Authentication Service (AS)
  - The Ticket Granting Service (TGS).

  The KDC issues "tickets" that allow clients to authenticate to
  services without repeatedly sending passwords, enhancing
  security. This port is crucial for handling the authentication process
  for users, machines, and services within the network.

  To authenticate with Kerberos, you can use any `kerberos client'.


2.4 DONE 135/tcp  - Microsoft Windows RPC
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  `Microsoft Windows RPC' (Remote Procedure Call), is a protocol that
  allows applications on a Windows machine to communicate with
  applications on other machines, regardless of whether they are on the
  same network or not.

  This port specifically facilitates the RPC endpoint mapper
  service. The endpoint mapper helps clients identify the correct port
  on which an RPC service is running on a server. After the initial
  contact on port 135, the server might assign a dynamic port for the
  specific RPC service you're interacting with.

  To explore the `RCP' interface you can use `rpcclient' on linux

  ,----
  | leo@ctf:~$ rpcclient -U leo 192.168.122.30
  | Password for [WORKGROUP\leo]:
  |    
  | rpcclient $> enumdomusers
  | user:[Administrator] rid:[0x1f4]
  | user:[Guest] rid:[0x1f5]
  | user:[krbtgt] rid:[0x1f6]
  | user:[leo] rid:[0x44f]
  | user:[test] rid:[0x452]   
  `----


2.5 DONE 139/tcp  - NetBIOS
~~~~~~~~~~~~~~~~~~~~~~~~~~~

  NetBIOS (`Network Basic Input/Output System') is a protocol originally
  developed for communication over local area networks (LANs). When
  TCP/IP became the standard networking protocol, NetBIOS was adapted to
  run over TCP/IP via the NetBIOS over TCP/IP or commonly known as NBT
  protocol.

  Port 139 facilitates communication for file and printer sharing, as
  well as for remote access between devices on a network. Port 445 (SMB)
  is now more commonly used for file and printer sharing on modern
  networks.

  ,----
  | leo@ctf:~$ nbtscan 192.168.122.30
  | Doing NBT name scan for addresses from 192.168.122.30
  | 
  | IP address       NetBIOS Name     Server    User             MAC address      
  | ------------------------------------------------------------------------------
  | 192.168.122.30   DC01             <server>  <unknown>        52:54:00:b7:e2:97
  `----


2.6 DONE 389/tcp  - LDAP
~~~~~~~~~~~~~~~~~~~~~~~~

  LDAP (`Lightweight Directory Access Protocol').

  We can query an LDAP server from a linux machine with `ldapsearch'
  ,----
  | sudo pacman -S openldap
  | ldapsearch -x -H ldap://hexdump.lab -D "CN=leo,CN=Users,DC=hexdump,DC=lab" -w "Hexdump123!" -b "DC=hexdump,DC=lab" "(objectClass=user)"
  | ldapwhoami -H ldap://hexdump.lab -D "CN=leo,CN=Users,DC=hexdump,DC=lab" -w "Hexdump123!"
  `----

  Search all users
  ,----
  | $Filter = "(objectClass=user)"
  | $RootOU = "DC=hexdump,DC=lab"
  | 
  | $Searcher = New-Object DirectoryServices.DirectorySearcher
  | $Searcher.SearchRoot = New-Object System.DirectoryServices.DirectoryEntry("LDAP://$($RootOU)")
  | $Searcher.Filter = $Filter
  | $Searcher.SearchScope = "Subtree"
  | $Searcher.FindAll()
  `----


2.7 DONE 443/tcp  - HTTPs
~~~~~~~~~~~~~~~~~~~~~~~~~

  Secure version of HTTP with added cryptography in order to guarantee:

  - Authentication
  - Confidentiality protection
  - Integrity protection

  Need to be configured with a proper TLS X.509 certificate.


2.8 DONE 445/tcp  - SMB
~~~~~~~~~~~~~~~~~~~~~~~

  SMB (`Server Message Block') is a network protocol that was developed
  for file-sharing. It enables computers to share files, printers and
  other resources over a network.

  SMB supports multiple features:

  - File Sharing
  - Printer Sharing
  - RPC
  - Inter-Process Communication
  - Authentication and Security

  There are different versions of the protocol

  - SMBv1

    Deprecated versions with several security vulnerabilities (WannaCry,
    CVE-2017-0143).

  - SMBv2
    - Improves performance

  - SMBv3
    - Supports end-to-end encryption for file trasnsfer over untrusted
      networks.
    - More performance improvements

  It can ran over multiple ports:

  - TCP/IP (Port 445)
  - NetBIOS (Ports 137-139)
  - Over UDP

  ----------------------------------------------------------------------

  To share a folder within the Domain Controller proceed as follows

  ,----
  | mkdir C:\SharedFiles
  | Right Click on new folder -> Share
  |                           -> Share
  `----

  To access the shared folder you can file `File Explorer' with the
  following path

  ,----
  | \\DC01\SharedFiles
  `----

  To access the shared folder over the network from a linux machine, you
  can use the `smbmap' and `smbclient'

  ,----
  | smbmap -H 192.168.122.30
  | smbclient //192.168.122.30/SharedFiles -U "hexdump.lab/leo%Hexdump123!"
  `----


2.9 DONE 464/tcp  - kpasswd5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Port 464/tcp is used by the Kerberos `password change protocol'
  (kpasswd5) in Active Directory (AD) environments.

  It works alongside the Kerberos authentication service, which is used
  in AD to authenticate users and computers within a
  domain. Specifically, it allows users to change their passwords
  securely via Kerberos.

  The Kpasswd service ensures that the password change is done in a way
  that preserves the security of the Kerberos tickets and the user’s
  ability to authenticate with the AD domain.


2.10 DONE 593/tcp  - ncacn_http
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Port 593 (TCP) is used for `Microsoft Windows RPC over HTTP 1.0', also
  known as ncacn_http "Network Computing Architecture
  Connection-oriented over HTTP".

  This allows Remote Procedure Call (RPC) communication to be
  encapsulated within HTTP, enabling access through firewalls and
  proxies.

  Port 593 is also used for `Distributed COM' (DCOM) services that need
  RPC access.


2.11 DONE 636/tcp  - LDAPS
~~~~~~~~~~~~~~~~~~~~~~~~~~

  Port 636 (TCP) is used for LDAPS (LDAP over SSL/TLS), which is the
  secure, encrypted version of LDAP used in Microsoft Active Directory
  (AD) and other directory services.


2.12 DONE 3268/tcp - GC over ldap
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Port 3268 (TCP) is used for LDAP queries to the Global Catalog (GC) in
  a Microsoft Active Directory (AD) environment.

  The Global Catalog is a partial, read-only replica of all objects from
  all domains in the forest, optimized for search and authentication.


2.13 DONE 3269/tcp - GC over SSL/TLS
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  The port 3269 is used by Global Catalog (GC) over Secure LDAP (LDAPS)
  in an Active Directory (AD) environment.

  The Global Catalog is a partial, read-only replica of all objects from
  all domains in the forest, optimized for search and
  authentication. Unlike port 3268 (which provides GC over regular
  LDAP), port 3269 encrypts communication using SSL/TLS.

  ,----
  | PS C:\Users\leo> Test-NetConnection -ComputerName dc01.hexdump.lab -Port 3269                                                                                                                                                             
  | ComputerName     : dc01.hexdump.lab
  | RemoteAddress    : 192.168.122.30
  | RemotePort       : 3269
  | InterfaceAlias   : Ethernet Instance 0
  | SourceAddress    : 192.168.122.105
  | TcpTestSucceeded : True
  `----

  Used for:
  - Cross-domain authentication
  - Forest-wide searches
  - LDAP queries for GC-replicated attributes
  - Secure lookup of user and group information


2.14 DONE 5357/tcp - Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Port 5357/tcp is used by Microsoft HTTPAPI 2 to offer the following
  network services:

  - SSDP (Simple Service Discovery Protocol)

    SDP is used for the discovery of devices and services on a local
    network. For example, it allows devices like printers, cameras, or
    smart TVs to be discovered by a Windows PC. This is part of the UPnP
    protocol suite.

  - UPnP (Universal Plug and Play)

    UPnP is a set of networking protocols that allow devices like
    routers, printers, and other networked devices to automatically
    discover and configure each other without needing manual
    configuration.


2.15 DONE 5985/tcp - Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Port 5357/tcp is used by Microsoft HTTPAPI to offer the following
  WinRM service.

  ,----
  | PS C:\Users\Administrator> Get-Service WinRM
  | 
  | Status   Name               DisplayName
  | ------   ----               -----------
  | Running  WinRM              Windows Remote Management (WS-Manag...
  `----

  ,----
  | PS C:\Users\Administrator> winrm enumerate winrm/config/listener
  | Listener
  |     Address = *
  |     Transport = HTTP
  |     Port = 5985
  |     Hostname
  |     Enabled = true
  |     URLPrefix = wsman
  |     CertificateThumbprint
  |     ListeningOn = 127.0.0.1, 192.168.122.30, ::1, fe80::489c:f306:a921:8809%6
  `----

  WinRM (`Windows Remote Management') is Microsoft's implementation of
  the WS-Management (Web Services for Management) protocol, which allows
  remote management of Windows systems using a standardized, SOAP-based
  API.

  If WinRM is enabled, the `Test-WsMan' command will return `WSMan
  details'

  ,----
  | Test-WsMan 192.168.122.30
  `----


3 General Services
==================

3.1 DONE 21/tcp   - FTP
~~~~~~~~~~~~~~~~~~~~~~~

  FTP (`File Transfer Protocol') is a standard network protocol used to
  transfer files between a client and a server over a TCP/IP network. It
  operates on port 21 (command/control) and port 20 (data transfer, in
  active mode).

  ,----
  | telnet IP 21
  `----


3.2 DONE 22/tcp   - SSH
~~~~~~~~~~~~~~~~~~~~~~~

  SSH (Secure Shell) is a cryptographic network protocol used to
  securely log into remote systems and execute commands over an
  encrypted connection. It is widely used for secure remote
  administration, file transfers, and tunneling.

  SSH can be used for:
  - Encrypted Communication
  - Authentication Methods
  - Port Forwarding/Tunneling
  - Secure File Transfer


3.3 DONE 1433/tcp - MSSQL
~~~~~~~~~~~~~~~~~~~~~~~~~

  MSSQL (Microsoft SQL Server) is an SQL server implemented by
  Microsoft.

  If MSSQL is configured to listen on this port (which is often the
  default setting), applications can access the server to interact with
  the SQL database.

  Connect to MSSQL database
  ,----
  | impacket-mssqlclient username:passworde@192.168.122.30 -windows-auth
  `----

  Simple SQL Query
  ,----
  | SELECT * FROM Employees WHERE Department = 'HR';
  `----


3.4 DONE 3389/tcp - RDP
~~~~~~~~~~~~~~~~~~~~~~~

  RPD (`Remote Desktop Protocol')

  Proprietary protocol developed by Microsoft that allows users to
  connect to and control another computer over a network.

  It provides a graphical interface for remote access, enabling users to
  interact with a remote machine as if they were sitting in front of it.
